<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="utilities_8h" kind="file" language="C++">
    <compoundname>utilities.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">gnuradio/expj.h</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">numeric</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="3">
        <label>gnuradio/expj.h</label>
      </node>
      <node id="4">
        <label>iomanip</label>
      </node>
      <node id="1">
        <label>utilities.h</label>
        <link refid="utilities_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="5">
        <label>numeric</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacegr">gr</innernamespace>
    <innernamespace refid="namespacegr_1_1lora__sdr">gr::lora_sdr</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>UTILITIES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UTILITIES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gnuradio/expj.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegr" kindref="compound">gr</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">lora_sdr<sp/>{</highlight></codeline>
<codeline lineno="15" refid="namespacegr_1_1lora__sdr_1adb2d67013a158614413dedf3f2ae4503" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacegr_1_1lora__sdr_1adb2d67013a158614413dedf3f2ae4503" kindref="member">mod</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>%<sp/>b<sp/>+<sp/>b)<sp/>%<sp/>b;<sp/>}</highlight></codeline>
<codeline lineno="24" refid="namespacegr_1_1lora__sdr_1af4e0331fc85f5e094f335feb3d65fb61" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;<sp/><ref refid="namespacegr_1_1lora__sdr_1af4e0331fc85f5e094f335feb3d65fb61" kindref="member">int2bool</ref>(uint<sp/>integer,<sp/>uint8_t<sp/>n_bits)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>std::vector&lt;bool&gt;<sp/>vec(n_bits,<sp/>0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>n_bits;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_bits;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>vec[--j]<sp/>=<sp/>((integer<sp/>&gt;&gt;<sp/>i)<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38" refid="namespacegr_1_1lora__sdr_1aff065b957d7d236fcb0c9fd010c9b6a6" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="namespacegr_1_1lora__sdr_1aff065b957d7d236fcb0c9fd010c9b6a6" kindref="member">bool2int</ref>(std::vector&lt;bool&gt;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>uint32_t<sp/>integer<sp/>=<sp/>std::accumulate(b.begin(),<sp/>b.end(),<sp/>0,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{<sp/>return<sp/>(x<sp/>&lt;&lt;<sp/>1)<sp/>+<sp/>y;<sp/>});</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>integer;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="namespacegr_1_1lora__sdr_1ab200cb6584b1993e5227cb0c2feaf077" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacegr_1_1lora__sdr_1ab200cb6584b1993e5227cb0c2feaf077" kindref="member">build_ref_chirps</ref>(gr_complex<sp/>*upchirp,<sp/>gr_complex<sp/>*downchirp,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>sf)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>sf);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>N;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>scaling<sp/>factor<sp/>of<sp/>0.9<sp/>is<sp/>here<sp/>to<sp/>avoid<sp/>to<sp/>saturate<sp/>the<sp/>USRP_SINK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>upchirp[n]<sp/>=<sp/>gr_complex(0.9f,<sp/>0.0f)<sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gr_expj(2.0<sp/>*<sp/>M_PI<sp/>*<sp/>(n<sp/>*<sp/>n<sp/>/<sp/>(2<sp/>*<sp/>N)<sp/>-<sp/>0.5<sp/>*<sp/>n));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>downchirp[n]<sp/>=<sp/>gr_complex(0.9f,<sp/>0.0f)<sp/>*</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gr_expj(-2.0<sp/>*<sp/>M_PI<sp/>*<sp/>(n<sp/>*<sp/>n<sp/>/<sp/>(2<sp/>*<sp/>N)<sp/>-<sp/>0.5<sp/>*<sp/>n));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75" refid="namespacegr_1_1lora__sdr_1ae0ffa3d5d413320a39a835e8318f3bb0" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacegr_1_1lora__sdr_1ae0ffa3d5d413320a39a835e8318f3bb0" kindref="member">build_upchirp</ref>(gr_complex<sp/>*chirp,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>uint8_t<sp/>sf)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>sf;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>N;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>scaling<sp/>factor<sp/>of<sp/>0.9<sp/>is<sp/>here<sp/>to<sp/>avoid<sp/>to<sp/>saturate<sp/>the<sp/>USRP_SINK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>chirp[n]<sp/>=<sp/>gr_complex(0.9f,<sp/>0.0f)<sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gr_expj(2.0<sp/>*<sp/>M_PI<sp/>*<sp/>(n<sp/>*<sp/>n<sp/>/<sp/>(2<sp/>*<sp/>N)<sp/>+<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>/<sp/>N<sp/>-<sp/>0.5)<sp/>*<sp/>n));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lora_sdr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>gr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>UTILITIES_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/martyn/gr-lora_sdr/include/lora_sdr/utilities.h"/>
  </compounddef>
</doxygen>
